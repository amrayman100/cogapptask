{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amray\\\\cogapp\\\\client\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport PostData from \"./data.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: null,\n      s: \"out\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"----\");\n    fetch(\"/report/?dims=country,goal&fields=name,country,category\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result,\n        s: \"in\"\n      });\n    }, error => {\n      this.setState({\n        isLoaded: \"error\",\n        s: \"error\"\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n    var egySports = 0;\n    var egyTech = 0;\n    var usaSports = 0;\n    var usaTech = 0;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      var egypt = this.state.items.EGY;\n      var usa = this.state.items.USA;\n      console.log(\"here\");\n      console.log(egypt);\n      console.log(usa);\n      console.log(egypt.length);\n\n      for (var i = 0; i < egypt.length; i++) {\n        if (egypt[i][\"category\"] == \"Sports\") {\n          console.log(egypt[\"category\"]);\n          egySports++;\n        } else if (egypt[i][\"category\"] == \"Technology\") {\n          egyTech++;\n        }\n      }\n\n      for (var i = 0; i < usa.length; i++) {\n        if (usa[i][\"category\"] == \"Sports\") {\n          usaSports++;\n        } else if (usa[i][\"category\"] == \"Technology\") {\n          usaTech++;\n        }\n      }\n\n      console.log(egySports);\n      console.log(usaSports);\n      var data = [{\n        name: 'USA',\n        Sports: usaSports,\n        Technology: usaTech\n      }, {\n        name: 'EGYPT',\n        Sports: egySports,\n        Technology: egyTech\n      }];\n    }\n\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      className: \"plot\",\n      width: 1000,\n      height: 300,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Sports\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Technology\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\amray\\cogapp\\client\\src\\App.js"],"names":["React","Component","Paper","Grid","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","PostData","App","constructor","props","state","error","isLoaded","items","s","componentDidMount","console","log","fetch","then","res","json","result","setState","render","egySports","egyTech","usaSports","usaTech","message","egypt","EGY","usa","USA","length","i","data","name","Sports","Technology","top","right","left","bottom"],"mappings":"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","sourcesContent":["\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport PostData from \"./data.json\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: null,\n      s : \"out\"\n    };\n  }\n  componentDidMount() {\n    console.log(\"----\");\n    fetch(\"/report/?dims=country,goal&fields=name,country,category\")\n    \n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          items: result,\n          s : \"in\"\n        \n          \n          \n        });\n        \n      },\n      \n      (error) => {\n        this.setState({\n          isLoaded: \"error\",\n          s : \"error\"\n          \n        });\n      }\n    )\n \n  }\n\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    var egySports = 0;\n    var egyTech = 0;\n    var usaSports = 0;\n    var usaTech = 0;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      \n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n\n      var egypt = this.state.items.EGY;\n      var usa = this.state.items.USA;\n      console.log(\"here\");\n      console.log(egypt);\n      console.log(usa);\n      console.log(egypt.length);\n      for(var i = 0; i < egypt.length ; i++){\n        if(egypt[i][\"category\"]==\"Sports\"){\n          console.log(egypt[\"category\"]);\n            egySports++;\n        }\n        else if(egypt[i][\"category\"]==\"Technology\"){\n          egyTech++;\n        }\n      }\n\n      for(var i = 0; i < usa.length ; i++){\n        if(usa[i][\"category\"]==\"Sports\"){\n           usaSports++;\n        }\n        else if(usa[i][\"category\"]==\"Technology\"){\n          usaTech++;\n        }\n      }\n\n      console.log(egySports);\n      console.log(usaSports);\n      var data = [\n        {\n          name: 'USA', Sports: usaSports, Technology: usaTech\n        },\n        {\n          name: 'EGYPT', Sports: egySports, Technology: egyTech\n        },\n    \n      ];\n      \n\n    }\n\n    return (\n      \n      <Grid container spacing={24}>\n         <Grid item xs={12}>\n         <BarChart\n        className=\"plot\"\n        width={1000}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"Sports\" fill=\"#8884d8\" />\n        <Bar dataKey=\"Technology\" fill=\"#82ca9d\" />\n      </BarChart>\n\n         </Grid>\n\n      \n        \n    </Grid>);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}