{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amray\\\\cogapp\\\\client\\\\src\\\\AddCampaign.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FormControl, InputLabel, Input, Button, TextField } from \"@material-ui/core\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    marginTop: 30\n  },\n  input: {\n    display: \"none\"\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n    marginBottom: 20\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  success: {\n    backgroundColor: green\n  }\n});\n\nclass AddCampaign extends Component {\n  constructor() {\n    super();\n\n    this.handleClose = (event, reason) => {\n      this.setState({\n        open: false\n      });\n\n      if (reason === 'clickaway') {\n        return;\n      }\n    };\n\n    this.handleChange = event => {};\n\n    this.handleSubmit = async e => {\n      console.log(\"send\");\n      e.preventDefault();\n      const response = await fetch('/campaign/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          country: this.state.country,\n          category: this.state.category,\n          budget: this.state.budget,\n          goal: this.state.goal\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        open: true,\n        message: body\n      });\n      console.log(body);\n    };\n\n    this.state = {\n      name: \"\",\n      country: \"\",\n      category: \"\",\n      budget: 0,\n      goal: \"\",\n      open: false,\n      message: ''\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          margin: 20,\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          width: \"50%\"\n        },\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Add New Campaign\"), React.createElement(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Campaign Name\"), React.createElement(Input, {\n        id: \"name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: e => this.setState({\n          name: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"country-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Country\"), React.createElement(Select, {\n        value: this.state.country,\n        onChange: e => this.setState({\n          country: e.target.value\n        }),\n        inputProps: {\n          name: 'country',\n          id: 'country-simple'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"EGY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"EGY\"), React.createElement(MenuItem, {\n        value: \"USA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"USA\"))), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"goal-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Goal\"), React.createElement(Select, {\n        value: this.state.goal,\n        onChange: e => this.setState({\n          goal: e.target.value\n        }),\n        inputProps: {\n          name: 'goal',\n          id: 'goal-simple'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"Conversion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Conversion\"), React.createElement(MenuItem, {\n        value: \"Awarness\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Awarness\"))), React.createElement(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"goal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Budget\"), React.createElement(Input, {\n        id: \"budget\",\n        type: \"Number\",\n        value: this.state.budget,\n        onChange: e => this.setState({\n          budget: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Category\"), React.createElement(Input, {\n        id: \"category\",\n        type: \"text\",\n        value: this.state.category,\n        onChange: e => this.setState({\n          category: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        className: classes.button,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Add Campaign\")), React.createElement(Snackbar, {\n        ContentProps: {\n          classes: {\n            root: classes.success\n          }\n        },\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        message: this.state.message,\n        autoHideDuration: 3000,\n        open: this.state.open,\n        onClose: this.handleClose,\n        SnackbarContentProps: {\n          'aria-describedby': 'snackbar-message-id'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default withStyles(styles)(AddCampaign);","map":{"version":3,"sources":["C:\\Users\\amray\\cogapp\\client\\src\\AddCampaign.js"],"names":["React","Component","withStyles","Select","MenuItem","FormControl","InputLabel","Input","Button","TextField","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","green","amber","IconButton","Snackbar","SnackbarContent","WarningIcon","variantIcon","success","warning","error","info","styles","theme","button","margin","spacing","unit","marginTop","input","display","container","flexWrap","textField","marginLeft","marginRight","width","marginBottom","dense","menu","formControl","minWidth","selectEmpty","backgroundColor","palette","dark","primary","icon","fontSize","iconVariant","opacity","message","alignItems","AddCampaign","constructor","handleClose","event","reason","setState","open","handleChange","handleSubmit","e","console","log","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","state","country","category","budget","goal","text","render","classes","props","isLoaded","justifyContent","padding","target","value","id","root","vertical","horizontal"],"mappings":"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","sourcesContent":["\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Input,\r\n    Button,\r\n    TextField\r\n  } from \"@material-ui/core\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n  };\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n      marginTop:30\r\n    },\r\n    input: {\r\n      display: \"none\"\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },\r\n      textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n        marginBottom:20,\r\n      },\r\n      dense: {\r\n        marginTop: 19,\r\n      },\r\n      menu: {\r\n        width: 200,\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing.unit * 2,\r\n      },\r\n\r\n      success: {\r\n        backgroundColor: green[600],\r\n      },\r\n      error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n      },\r\n      info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n      },\r\n      warning: {\r\n        backgroundColor: amber[700],\r\n      },\r\n      icon: {\r\n        fontSize: 20,\r\n      },\r\n      iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n      },\r\n      message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      },\r\n      success: {\r\n        backgroundColor: green,\r\n      },\r\n    \r\n  });\r\n\r\n  \r\nclass AddCampaign extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            country:\"\",\r\n            category:\"\",\r\n            budget:0,\r\n            goal:\"\",\r\n            open: false,\r\n            message: ''\r\n        \r\n        };\r\n     }\r\n\r\n     \r\n     handleClose = (event, reason) => {\r\n        this.setState({open:false})\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n     }\r\n  \r\n\r\n     handleChange = (event) => {\r\n       \r\n     }\r\n\r\n     handleSubmit = async e => {\r\n         console.log(\"send\");\r\n        e.preventDefault();\r\n        const response = await fetch('/campaign/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({name : this.state.name , country : this.state.country , \r\n            category : this.state.category , budget : this.state.budget , goal : this.state.goal\r\n         }),\r\n        });\r\n      \r\n        const body = await response.text();\r\n       \r\n        this.setState({open:true , message: body})\r\n        \r\n        console.log(body);\r\n    \r\n     }\r\n\r\n     render() {\r\n        const { classes } = this.props;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n            \r\n          } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n          } else {\r\n      \r\n       \r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              margin: 20,\r\n              padding: 20\r\n            }}\r\n          >\r\n            <form style={{ width: \"50%\" }} onSubmit={this.handleSubmit}>\r\n              <h1>Add New Campaign</h1>\r\n    \r\n              <FormControl margin=\"normal\" fullWidth>\r\n                <InputLabel htmlFor=\"name\">Campaign Name</InputLabel>\r\n                <Input id=\"name\" type=\"text\"  value={this.state.name}\r\n            onChange={e => this.setState({ name: e.target.value })} />\r\n              </FormControl>\r\n              <FormControl  fullWidth>\r\n                 <InputLabel htmlFor=\"country-simple\">Country</InputLabel>\r\n                <Select\r\n             value={this.state.country}\r\n             onChange={e => this.setState({ country: e.target.value })} \r\n            inputProps={{\r\n              name: 'country',\r\n              id: 'country-simple',\r\n            }}\r\n          >\r\n           \r\n            <MenuItem value=\"EGY\">EGY</MenuItem>\r\n            <MenuItem value=\"USA\">USA</MenuItem>\r\n        \r\n          </Select>\r\n\r\n        </FormControl>\r\n\r\n        <FormControl  fullWidth>\r\n                 <InputLabel htmlFor=\"goal-simple\">Goal</InputLabel>\r\n                <Select\r\n             value={this.state.goal}\r\n             onChange={e => this.setState({ goal: e.target.value })} \r\n            inputProps={{\r\n              name: 'goal',\r\n              id: 'goal-simple',\r\n            }}\r\n          >\r\n        \r\n            <MenuItem value=\"Conversion\">Conversion</MenuItem>\r\n            <MenuItem value=\"Awarness\">Awarness</MenuItem>\r\n        \r\n          </Select>\r\n\r\n        </FormControl>\r\n        \r\n              <FormControl margin=\"normal\" fullWidth>\r\n                <InputLabel htmlFor=\"goal\">Budget</InputLabel>\r\n                <Input id=\"budget\" type=\"Number\"  value={this.state.budget}\r\n                onChange={e => this.setState({ budget: e.target.value })} />\r\n              </FormControl>\r\n    \r\n              <FormControl margin=\"normal\" fullWidth>\r\n                <InputLabel htmlFor=\"category\">Category</InputLabel>\r\n                <Input id=\"category\"  type=\"text\"  value={this.state.category}\r\n            onChange={e => this.setState({ category: e.target.value })}  />\r\n              </FormControl>\r\n    \r\n              <Button type=\"submit\" className = {classes.button} variant=\"contained\" color=\"primary\" size=\"medium\">\r\n                Add Campaign\r\n              </Button>\r\n            </form>\r\n            <Snackbar\r\n        ContentProps={{\r\n            classes: {\r\n                root: classes.success\r\n            }\r\n        }}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        message={this.state.message}\r\n        autoHideDuration={3000}\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        SnackbarContentProps={{\r\n          'aria-describedby': 'snackbar-message-id',\r\n        }}\r\n      />\r\n       \r\n            </div>\r\n           \r\n        );\r\n      }\r\n     }\r\n}\r\n\r\nexport default withStyles(styles)(AddCampaign);\r\n"]},"metadata":{},"sourceType":"module"}