{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amray\\\\cogapp\\\\client\\\\src\\\\Analysis.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport PostData from \"./data.json\";\nimport CategoryChart from './CategoryChart';\nimport GoalChart from './CategoryChart';\n\nconst styles = theme => ({\n  button: {\n    marginTop: 10,\n    margin: theme.spacing.unit\n  }\n});\n\nclass Analysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: null,\n      cat: true,\n      s: \"out\"\n    };\n    this.byCategory = this.byCategory.bind(this);\n    this.byGoal = this.byGoal.bind(this);\n  }\n\n  async componentDidMount() {\n    await fetch(\"/campaigns/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(PostData)\n    });\n    console.log(PostData);\n    console.log(\"----\");\n    fetch(\"/report/?dims=country,goal&fields=name,country,category\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result,\n        s: \"in\"\n      });\n    }, error => {\n      this.setState({\n        isLoaded: \"error\",\n        s: \"error\"\n      });\n    });\n  }\n\n  byGoal(e) {\n    this.setState({\n      cat: false\n    });\n  }\n\n  byCategory(e) {\n    this.setState({\n      cat: true\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items,\n          cat = _this$state.cat;\n    var egySports = 0;\n    var egyTech = 0;\n    var usaSports = 0;\n    var usaTech = 0;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {}\n  }\n\n}\n\nexport default withStyles(styles)(Analysis);","map":{"version":3,"sources":["C:\\Users\\amray\\cogapp\\client\\src\\Analysis.js"],"names":["React","Component","Paper","Grid","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Button","withStyles","PostData","CategoryChart","GoalChart","styles","theme","button","marginTop","margin","spacing","unit","Analysis","constructor","props","state","error","isLoaded","items","cat","s","byCategory","bind","byGoal","componentDidMount","fetch","method","headers","body","JSON","stringify","console","log","then","res","json","result","setState","e","render","classes","egySports","egyTech","usaSports","usaTech","message"],"mappings":"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","sourcesContent":["\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostData from \"./data.json\";\r\nimport CategoryChart from './CategoryChart';\r\nimport GoalChart from './CategoryChart';\r\n\r\nconst styles = theme => ({\r\n \r\n    button: {\r\n      marginTop:10,\r\n      margin: theme.spacing.unit,\r\n    },\r\n  });\r\n\r\nclass Analysis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: null,\r\n      cat: true,\r\n      s : \"out\"\r\n    };\r\n\r\n    this.byCategory = this.byCategory.bind(this);\r\n    this.byGoal = this.byGoal.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    await fetch(\"/campaigns/\", {\r\n      method: 'POST',\r\n      headers: {\r\n        \r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(PostData)\r\n    });\r\n    console.log(PostData);\r\n    console.log(\"----\");\r\n    fetch(\"/report/?dims=country,goal&fields=name,country,category\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result,\r\n          s : \"in\"\r\n        \r\n          \r\n          \r\n        });\r\n        \r\n      },\r\n      \r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: \"error\",\r\n          s : \"error\"\r\n          \r\n        });\r\n      }\r\n    )\r\n \r\n  }\r\n\r\n  byGoal(e) {\r\n    this.setState({\r\n     cat:false\r\n    });\r\n  }\r\n  \r\n  byCategory(e) {\r\n    this.setState({\r\n        cat:true\r\n       });\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { error, isLoaded, items , cat } = this.state;\r\n    var egySports = 0;\r\n    var egyTech = 0;\r\n    var usaSports = 0;\r\n    var usaTech = 0;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n      \r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n\r\n\r\n\r\n    }\r\n\r\n   \r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Analysis);\r\n"]},"metadata":{},"sourceType":"module"}