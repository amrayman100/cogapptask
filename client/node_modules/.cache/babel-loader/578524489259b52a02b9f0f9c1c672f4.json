{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amray\\\\cogapp\\\\client\\\\src\\\\CategoryChart.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  button: {\n    marginTop: 10,\n    margin: theme.spacing.unit\n  }\n});\n\nclass CategoryChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme,\n          campaigns = _this$props.campaigns;\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n    var egySports = 0;\n    var egyTech = 0;\n    var usaSports = 0;\n    var usaTech = 0;\n    var egypt = campaigns.EGY;\n    var usa = campaigns.USA;\n\n    for (var i = 0; i < egypt.length; i++) {\n      if (egypt[i][\"category\"].toUpperCase() == \"Sports\".toUpperCase()) {\n        console.log(egypt[\"category\"]);\n        egySports++;\n      } else if (egypt[i][\"category\"].toUpperCase() == \"Technology\".toUpperCase()) {\n        egyTech++;\n      }\n    }\n\n    for (var i = 0; i < usa.length; i++) {\n      if (usa[i][\"category\"].toUpperCase() == \"Sports\".toUpperCase()) {\n        usaSports++;\n      } else if (usa[i][\"category\"].toUpperCase() == \"Technology\".toUpperCase()) {\n        usaTech++;\n      }\n    }\n\n    var data2 = [{\n      name: 'USA',\n      Sports: usaSports,\n      Technology: usaTech\n    }, {\n      name: 'EGYPT',\n      Sports: egySports,\n      Technology: egyTech\n    }];\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      className: \"plot\",\n      width: 1000,\n      height: 300,\n      data: data2,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Sports\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Technology\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default CategoryChart;","map":{"version":3,"sources":["C:\\Users\\amray\\cogapp\\client\\src\\CategoryChart.js"],"names":["React","Component","Paper","Grid","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Button","withStyles","styles","theme","button","marginTop","margin","spacing","unit","CategoryChart","constructor","props","state","error","isLoaded","componentDidMount","render","classes","campaigns","items","egySports","egyTech","usaSports","usaTech","egypt","EGY","usa","USA","i","length","toUpperCase","console","log","data2","name","Sports","Technology","top","right","left","bottom"],"mappings":"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","sourcesContent":["\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n \r\n  button: {\r\n    marginTop:10,\r\n    margin: theme.spacing.unit,\r\n  },\r\n \r\n});\r\n\r\nclass CategoryChart extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n      \r\n      };\r\n    \r\n  }\r\n   componentDidMount() {\r\n    \r\n \r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes, theme , campaigns } = this.props;\r\n    const { error, isLoaded, items } = this.state;\r\n    var egySports = 0;\r\n    var egyTech = 0;\r\n    var usaSports = 0;\r\n    var usaTech = 0;\r\n    \r\n      var egypt = campaigns.EGY;\r\n      var usa = campaigns.USA;\r\n      for(var i = 0; i < egypt.length ; i++){\r\n        if(egypt[i][\"category\"].toUpperCase()==\"Sports\".toUpperCase()){\r\n          console.log(egypt[\"category\"]);\r\n            egySports++;\r\n        }\r\n        else if(egypt[i][\"category\"].toUpperCase()==\"Technology\".toUpperCase()){\r\n          egyTech++;\r\n        }\r\n      }\r\n\r\n      for(var i = 0; i < usa.length ; i++){\r\n        if(usa[i][\"category\"].toUpperCase()==\"Sports\".toUpperCase()){\r\n           usaSports++;\r\n        }\r\n        else if(usa[i][\"category\"].toUpperCase()==\"Technology\".toUpperCase()){\r\n          usaTech++;\r\n        }\r\n      }\r\n\r\n      \r\n      var data2 = [\r\n        {\r\n          name: 'USA', Sports: usaSports, Technology: usaTech\r\n        },\r\n        {\r\n          name: 'EGYPT', Sports: egySports, Technology: egyTech\r\n        },\r\n    \r\n      ];\r\n      \r\n\r\n    \r\n\r\n    return (\r\n\r\n      \r\n      <Grid container spacing={24}>\r\n\r\n       \r\n    <Grid item xs={12}>\r\n    <ResponsiveContainer\r\n        width=\"100%\"\r\n        \r\n      >\r\n    <BarChart\r\n        className=\"plot\"\r\n        width={1000}\r\n        height={300}\r\n        data={data2}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"Sports\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"Technology\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n      </ResponsiveContainer>\r\n         </Grid>\r\n\r\n         \r\n\r\n      \r\n        \r\n    </Grid>);\r\n  }\r\n}\r\n\r\nexport default CategoryChart;\r\n"]},"metadata":{},"sourceType":"module"}