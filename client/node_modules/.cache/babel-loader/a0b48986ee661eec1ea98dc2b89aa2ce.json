{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amray\\\\cogapp\\\\client\\\\src\\\\Analysis.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport PostData from \"./data.json\";\nimport CategoryChart from './CategoryChart';\nimport GoalChart from './GoalChart';\n\nconst styles = theme => ({\n  button: {\n    marginTop: 10,\n    margin: theme.spacing.unit\n  }\n});\n\nclass Analysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: null,\n      len: 0,\n      cat: true,\n      s: \"out\"\n    };\n    this.byCategory = this.byCategory.bind(this);\n    this.byGoal = this.byGoal.bind(this);\n  }\n\n  async componentDidMount() {\n    fetch(\"/report/?dims=country,goal&fields=name,country,category,goal\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result,\n        s: \"in\"\n      });\n    }, error => {\n      this.setState({\n        isLoaded: \"error\",\n        s: \"error\"\n      });\n    });\n  }\n\n  byGoal(e) {\n    this.setState({\n      cat: false\n    });\n  }\n\n  byCategory(e) {\n    this.setState({\n      cat: true\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items,\n          cat = _this$state.cat;\n    var egySports = 0;\n    var egyTech = 0;\n    var usaSports = 0;\n    var usaTech = 0;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Loading...\");\n    } else if (cat) {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Analysis By Country And Category\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(CategoryChart, {\n        campaigns: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.byCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"By Category\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.byGoal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"By Goal\")));\n    } else if (!cat) {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Analysis By Country And Goal\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(GoalChart, {\n        campaigns: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.byCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"By Category\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        onClick: this.byGoal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"By Goal\")));\n    }\n  }\n\n}\n\nexport default withStyles(styles)(Analysis);","map":{"version":3,"sources":["C:\\Users\\amray\\cogapp\\client\\src\\Analysis.js"],"names":["React","Component","Paper","Grid","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Button","withStyles","PostData","CategoryChart","GoalChart","styles","theme","button","marginTop","margin","spacing","unit","Analysis","constructor","props","state","error","isLoaded","items","len","cat","s","byCategory","bind","byGoal","componentDidMount","fetch","then","res","json","result","setState","e","render","classes","egySports","egyTech","usaSports","usaTech","message"],"mappings":"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","sourcesContent":["\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostData from \"./data.json\";\r\nimport CategoryChart from './CategoryChart';\r\nimport GoalChart from './GoalChart';\r\n\r\nconst styles = theme => ({\r\n \r\n    button: {\r\n      marginTop:10,\r\n      margin: theme.spacing.unit,\r\n    },\r\n  });\r\n\r\nclass Analysis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: null,\r\n      len: 0 ,\r\n      cat: true,\r\n      s : \"out\"\r\n    };\r\n\r\n    this.byCategory = this.byCategory.bind(this);\r\n    this.byGoal = this.byGoal.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n \r\n\r\n    fetch(\"/report/?dims=country,goal&fields=name,country,category,goal\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result,\r\n          s : \"in\"\r\n        \r\n          \r\n          \r\n        });\r\n        \r\n      },\r\n      \r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: \"error\",\r\n          s : \"error\"\r\n          \r\n        });\r\n      }\r\n    )\r\n \r\n  \r\n\r\n}\r\n\r\n\r\n\r\n  byGoal(e) {\r\n    this.setState({\r\n     cat:false\r\n    });\r\n  }\r\n  \r\n  byCategory(e) {\r\n    this.setState({\r\n        cat:true\r\n       });\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { error, isLoaded, items , cat } = this.state;\r\n    var egySports = 0;\r\n    var egyTech = 0;\r\n    var usaSports = 0;\r\n    var usaTech = 0;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n      \r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else if(cat) {\r\n\r\n\r\n        \r\n        return (\r\n\r\n            <Grid container spacing={24}>\r\n      \r\n              <Grid item xs={12}>\r\n              <h1 className= \"header\">Analysis By Country And Category</h1>\r\n           \r\n              </Grid>\r\n               <Grid item xs={12}>\r\n              \r\n              <CategoryChart campaigns = {this.state.items}></CategoryChart>\r\n            \r\n            \r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n             onClick={this.byCategory}\r\n            >\r\n              By Category\r\n            </Button>\r\n      \r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n             onClick={this.byGoal}\r\n            >\r\n              By Goal\r\n            </Button>\r\n      \r\n               </Grid>\r\n      \r\n            \r\n              \r\n          </Grid>);\r\n\r\n      \r\n\r\n\r\n  }\r\n\r\n  else if(!cat) {\r\n    return (\r\n\r\n        <Grid container spacing={24}>\r\n  \r\n          <Grid item xs={12}>\r\n          <h1 className= \"header\">Analysis By Country And Goal</h1>\r\n       \r\n          </Grid>\r\n           <Grid item xs={12}>\r\n          \r\n          <GoalChart campaigns = {this.state.items}></GoalChart>\r\n        \r\n       \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n         onClick={this.byCategory}\r\n        >\r\n          By Category\r\n        </Button>\r\n  \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button}\r\n         onClick={this.byGoal}\r\n        >\r\n          By Goal\r\n        </Button>\r\n  \r\n           </Grid>\r\n  \r\n        \r\n          \r\n      </Grid>);\r\n\r\n  }\r\n\r\n        \r\n    \r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Analysis);\r\n"]},"metadata":{},"sourceType":"module"}